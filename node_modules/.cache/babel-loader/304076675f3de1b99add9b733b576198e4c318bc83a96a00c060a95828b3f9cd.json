{"ast":null,"code":"import { mapGetters } from \"vuex\";\nexport default {\n  data() {\n    return {\n      checkAll: false\n    };\n  },\n  props: {\n    rows: [],\n    values: [],\n    removeFilterFunc: Function\n  },\n  computed: {\n    ...mapGetters({\n      selectedFiltersUser: \"selectedFiltersUser\"\n    })\n  },\n  methods: {\n    toggleSelectAll() {\n      this.checkAll = !this.checkAll;\n      this.values.map((value, index) => {\n        const refName = this.generateRefName(index);\n        this.$refs[refName][0].checked = this.checkAll;\n      });\n    },\n    generateRefName(index) {\n      return `normalRowCheckBox${index}`;\n    },\n    addFilterDate(collumName, filterValue) {\n      this.$store.commit(\"removeSelectedFilterUser\", collumName, filterValue);\n    },\n    removeFilterDate(collumName) {\n      this.$store.commit(\"removeSelectedFilterUser\", collumName);\n    }\n  }\n};","map":{"version":3,"names":["mapGetters","data","checkAll","props","rows","values","removeFilterFunc","Function","computed","selectedFiltersUser","methods","toggleSelectAll","map","value","index","refName","generateRefName","$refs","checked","addFilterDate","collumName","filterValue","$store","commit","removeFilterDate"],"sources":["src/Dashboard/Components/Core/TableView.vue"],"sourcesContent":["<template>\r\n  <div class=\"tableview-bar-dashboard\">\r\n    <div class=\"tableview-bar-dashboard-main-row\">\r\n      <div v-for=\"(collumName, index) in rows\" :key=\"index\">\r\n        <div v-if=\"index === 0\">\r\n          <input type=\"checkbox\" @click=\"toggleSelectAll\" />\r\n        </div>\r\n        <p>{{ collumName }}</p>\r\n\r\n        <span>\r\n          <i\r\n            v-if=\"\r\n              selectedFiltersUser.some(\r\n                (filter) => filter.filterName === collumName\r\n              )\r\n            \"\r\n            @click=\"removeFilter(collumName)\"\r\n            class=\"material-icons\"\r\n          >\r\n            filter_alt\r\n          </i>\r\n        </span>\r\n\r\n        <span>\r\n          <i class=\"material-icons\"> expand_less </i>\r\n          <i class=\"material-icons\"> expand_more </i>\r\n        </span>\r\n      </div>\r\n    </div>\r\n\r\n    <div\r\n      class=\"tableview-bar-dashboard-nomal-row\"\r\n      v-for=\"(collumValues, MainIndex) in values\"\r\n      :key=\"MainIndex\"\r\n    >\r\n      <div v-for=\"(collumValue, index) in collumValues\" :key=\"index\">\r\n        <div v-if=\"index === 0\">\r\n          <input type=\"checkbox\" :ref=\"generateRefName(MainIndex)\" />\r\n        </div>\r\n        <p>{{ collumValue }}</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters } from \"vuex\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      checkAll: false,\r\n    };\r\n  },\r\n\r\n  props: {\r\n    rows: [],\r\n    values: [],\r\n    removeFilterFunc: Function,\r\n  },\r\n\r\n  computed: {\r\n    ...mapGetters({\r\n      selectedFiltersUser: \"selectedFiltersUser\",\r\n    }),\r\n  },\r\n\r\n  methods: {\r\n    toggleSelectAll() {\r\n      this.checkAll = !this.checkAll;\r\n      this.values.map((value, index) => {\r\n        const refName = this.generateRefName(index);\r\n\r\n        this.$refs[refName][0].checked = this.checkAll;\r\n      });\r\n    },\r\n\r\n    generateRefName(index) {\r\n      return `normalRowCheckBox${index}`;\r\n    },\r\n\r\n    addFilterDate(collumName, filterValue) {\r\n      this.$store.commit(\"removeSelectedFilterUser\", collumName, filterValue);\r\n    },\r\n\r\n    removeFilterDate(collumName) {\r\n      this.$store.commit(\"removeSelectedFilterUser\", collumName);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.tableview-bar-dashboard {\r\n  width: 1645px;\r\n  height: 820px;\r\n  border-bottom: 2px solid #2c3968;\r\n  border-top: 2px solid #2c3968;\r\n  overflow: auto;\r\n}\r\n\r\n.tableview-bar-dashboard-main-row {\r\n  width: 1645px; /* taking width larger then the parent's width */\r\n  height: 45px;\r\n  background-color: #2c3968;\r\n  display: flex;\r\n  flex: 0 0 auto;\r\n\r\n  div {\r\n    width: 220px;\r\n    height: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    color: whitesmoke;\r\n    font-size: 1.25rem;\r\n\r\n    p {\r\n      &:hover {\r\n        cursor: pointer;\r\n      }\r\n    }\r\n\r\n    div {\r\n      width: 30px;\r\n      height: 100%;\r\n      border-right: none;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      margin-right: 5px;\r\n      input {\r\n        cursor: pointer;\r\n        width: 17.5px;\r\n        height: 17.5px;\r\n      }\r\n    }\r\n\r\n    span {\r\n      padding-top: 2px;\r\n      padding-bottom: 2px;\r\n      width: 20px;\r\n      height: 100%;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      flex-direction: column;\r\n      margin-left: 10px;\r\n      i {\r\n        font-size: 1.5rem;\r\n        cursor: pointer;\r\n        transition: 0.3s;\r\n        &:hover {\r\n          color: black;\r\n        }\r\n      }\r\n    }\r\n\r\n    i {\r\n      font-size: 1.5rem;\r\n      cursor: pointer;\r\n      transition: 0.3s;\r\n    }\r\n  }\r\n}\r\n\r\n.tableview-bar-dashboard-nomal-row {\r\n  width: 100%;\r\n  height: 35px;\r\n  display: flex;\r\n  border-bottom: 1px solid #2c3968;\r\n  div {\r\n    width: 220px;\r\n    height: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    word-wrap: break-word;\r\n    color: black;\r\n    font-size: 0.8rem;\r\n    border-right: 1px solid #2c3968;\r\n    padding: 1px;\r\n\r\n    div {\r\n      width: 30px;\r\n      height: 100%;\r\n      border-right: none;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      input {\r\n        cursor: pointer;\r\n        width: 15px;\r\n        height: 15px;\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n"],"mappings":"AA8CA,SAAAA,UAAA;AAEA;EACAC,KAAA;IACA;MACAC,QAAA;IACA;EACA;EAEAC,KAAA;IACAC,IAAA;IACAC,MAAA;IACAC,gBAAA,EAAAC;EACA;EAEAC,QAAA;IACA,GAAAR,UAAA;MACAS,mBAAA;IACA;EACA;EAEAC,OAAA;IACAC,gBAAA;MACA,KAAAT,QAAA,SAAAA,QAAA;MACA,KAAAG,MAAA,CAAAO,GAAA,EAAAC,KAAA,EAAAC,KAAA;QACA,MAAAC,OAAA,QAAAC,eAAA,CAAAF,KAAA;QAEA,KAAAG,KAAA,CAAAF,OAAA,KAAAG,OAAA,QAAAhB,QAAA;MACA;IACA;IAEAc,gBAAAF,KAAA;MACA,2BAAAA,KAAA;IACA;IAEAK,cAAAC,UAAA,EAAAC,WAAA;MACA,KAAAC,MAAA,CAAAC,MAAA,6BAAAH,UAAA,EAAAC,WAAA;IACA;IAEAG,iBAAAJ,UAAA;MACA,KAAAE,MAAA,CAAAC,MAAA,6BAAAH,UAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}