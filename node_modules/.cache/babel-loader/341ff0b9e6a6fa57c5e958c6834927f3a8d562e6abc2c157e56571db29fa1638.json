{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { mapGetters } from \"vuex\";\nexport default {\n  data() {\n    return {\n      animation: true,\n      hasCustomer: false,\n      hasVendor: false,\n      hasWorker: false,\n      hasJobCandidate: false\n    };\n  },\n  computed: {\n    ...mapGetters({\n      contactToUpdate: \"contactToUpdate\"\n    })\n  },\n  methods: {\n    unShowForm() {\n      this.animation = false;\n      setTimeout(() => {\n        this.$store.commit(\"setShowUpdateContactRolesForm\", false);\n      }, 500);\n    },\n    getContactRolesOfContact() {\n      if (this.contactToUpdate.contact_roles.includes(\"customer\")) {\n        this.hasCustomer = true;\n      } else {\n        this.hasCustomer = false;\n      }\n      if (this.contactToUpdate.contact_roles.includes(\"vendor\")) {\n        this.hasVendor = true;\n      } else {\n        this.hasVendor = false;\n      }\n      if (this.contactToUpdate.contact_roles.includes(\"worker\")) {\n        this.hasWorker = true;\n      } else {\n        this.hasWorker = false;\n      }\n      if (this.contactToUpdate.contact_roles.includes(\"jobCandidate\")) {\n        this.hasJobCandidate = true;\n      } else {\n        this.hasJobCandidate = false;\n      }\n    },\n    toggleContactRole(event) {\n      const contactRoles = this.contactToUpdate.contact_roles;\n      if (event.target.checked) {\n        const indexToRemove = contactRoles.indexOf(event.target.value);\n\n        // Check if the value is in the array\n        if (indexToRemove !== -1) {\n          // Remove the value from the array\n          contactRoles.splice(indexToRemove, 1);\n        }\n      } else {\n        contactRoles.push(event.target.value);\n      }\n    }\n  },\n  mounted() {\n    this.getContactRolesOfContact();\n  }\n};","map":{"version":3,"names":["mapGetters","data","animation","hasCustomer","hasVendor","hasWorker","hasJobCandidate","computed","contactToUpdate","methods","unShowForm","setTimeout","$store","commit","getContactRolesOfContact","contact_roles","includes","toggleContactRole","event","contactRoles","target","checked","indexToRemove","indexOf","value","splice","push","mounted"],"sources":["src/Contacts-frontend/Components/AddRemoveRoleFromContact.vue"],"sourcesContent":["<template>\r\n  <div :class=\"['popUp-content', animation ? 'zoomIn' : 'zoomOut']\">\r\n    <div class=\"heading-text-container\">\r\n      <p>Select contact type</p>\r\n    </div>\r\n\r\n    <div class=\"roles-container\">\r\n      <div>\r\n        <p>Customer</p>\r\n        <input\r\n          @change=\"toggleContactRole\"\r\n          v-model=\"hasCustomer\"\r\n          type=\"checkbox\"\r\n        />\r\n      </div>\r\n\r\n      <div>\r\n        <p>Vendor</p>\r\n        <input\r\n          @change=\"toggleContactRole\"\r\n          value=\"vendor\"\r\n          v-model=\"hasVendor\"\r\n          type=\"checkbox\"\r\n        />\r\n      </div>\r\n\r\n      <div>\r\n        <p>Worker</p>\r\n        <input\r\n          @change=\"toggleContactRole\"\r\n          value=\"worker\"\r\n          v-model=\"hasWorker\"\r\n          type=\"checkbox\"\r\n        />\r\n      </div>\r\n\r\n      <div>\r\n        <p>Job Candidate</p>\r\n        <input\r\n          @change=\"toggleContactRole\"\r\n          value=\"jobCandidate\"\r\n          v-model=\"hasJobCandidate\"\r\n          type=\"checkbox\"\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"button-container\">\r\n      <button @click=\"unShowForm\">Close</button>\r\n      <button>Update Contact Roles</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters } from \"vuex\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      animation: true,\r\n      hasCustomer: false,\r\n      hasVendor: false,\r\n      hasWorker: false,\r\n      hasJobCandidate: false,\r\n    };\r\n  },\r\n\r\n  computed: {\r\n    ...mapGetters({ contactToUpdate: \"contactToUpdate\" }),\r\n  },\r\n\r\n  methods: {\r\n    unShowForm() {\r\n      this.animation = false;\r\n      setTimeout(() => {\r\n        this.$store.commit(\"setShowUpdateContactRolesForm\", false);\r\n      }, 500);\r\n    },\r\n\r\n    getContactRolesOfContact() {\r\n      if (this.contactToUpdate.contact_roles.includes(\"customer\")) {\r\n        this.hasCustomer = true;\r\n      } else {\r\n        this.hasCustomer = false;\r\n      }\r\n\r\n      if (this.contactToUpdate.contact_roles.includes(\"vendor\")) {\r\n        this.hasVendor = true;\r\n      } else {\r\n        this.hasVendor = false;\r\n      }\r\n\r\n      if (this.contactToUpdate.contact_roles.includes(\"worker\")) {\r\n        this.hasWorker = true;\r\n      } else {\r\n        this.hasWorker = false;\r\n      }\r\n\r\n      if (this.contactToUpdate.contact_roles.includes(\"jobCandidate\")) {\r\n        this.hasJobCandidate = true;\r\n      } else {\r\n        this.hasJobCandidate = false;\r\n      }\r\n    },\r\n\r\n    toggleContactRole(event) {\r\n      const contactRoles = this.contactToUpdate.contact_roles;\r\n      if (event.target.checked) {\r\n        const indexToRemove = contactRoles.indexOf(event.target.value);\r\n\r\n        // Check if the value is in the array\r\n        if (indexToRemove !== -1) {\r\n          // Remove the value from the array\r\n          contactRoles.splice(indexToRemove, 1);\r\n        }\r\n      } else {\r\n        contactRoles.push(event.target.value);\r\n      }\r\n    },\r\n  },\r\n\r\n  mounted() {\r\n    this.getContactRolesOfContact();\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.popUp-content {\r\n  background-color: white;\r\n  position: absolute;\r\n  left: 38%;\r\n  height: 400px;\r\n  width: 500px;\r\n  border-radius: 5px;\r\n  box-shadow: rgba(0, 0, 0, 0.3) 0px 19px 38px,\r\n    rgba(0, 0, 0, 0.22) 0px 15px 12px;\r\n  opacity: 0;\r\n  top: 10rem;\r\n  animation-duration: 0.5s;\r\n}\r\n\r\n.zoomIn {\r\n  animation-name: zoomIn;\r\n  animation-fill-mode: forwards;\r\n  animation-duration: 0.5s;\r\n}\r\n\r\n.zoomOut {\r\n  animation-name: zoomOut;\r\n  animation-fill-mode: forwards;\r\n  animation-duration: 0.5s;\r\n}\r\n\r\n.heading-text-container {\r\n  width: 100%;\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  p {\r\n    text-align: center;\r\n    font-weight: 600;\r\n    letter-spacing: 1px;\r\n  }\r\n}\r\n\r\n.roles-container {\r\n  width: 100%;\r\n  height: 300px;\r\n  overflow-y: auto;\r\n\r\n  div {\r\n    width: 300px;\r\n    height: 40px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    padding: 0 20px;\r\n    margin: 20px auto;\r\n    box-shadow: rgba(50, 50, 93, 0.25) 0px 13px 27px -5px,\r\n      rgba(0, 0, 0, 0.3) 0px 8px 16px -8px;\r\n\r\n    p {\r\n      font-weight: 100;\r\n      letter-spacing: 1px;\r\n    }\r\n\r\n    input[type=\"checkbox\"] {\r\n      height: 18px;\r\n      width: 18px;\r\n      cursor: pointer;\r\n      &:checked {\r\n        background-color: #008000; /* Green color as an example */\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n.button-container {\r\n  width: 100%;\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  button {\r\n    width: 40%;\r\n    margin-bottom: 15px;\r\n    border: none;\r\n    height: 30px;\r\n    box-shadow: rgba(0, 0, 0, 0.15) 1.95px 1.95px 2.6px;\r\n    cursor: pointer;\r\n    margin: 0 10px;\r\n  }\r\n}\r\n\r\n@keyframes zoomIn {\r\n  from {\r\n    opacity: 0;\r\n    transform: scale(0); // Start with 0 scale\r\n  }\r\n  to {\r\n    opacity: 1;\r\n    transform: scale(1); // End with 1 scale (normal size)\r\n  }\r\n}\r\n\r\n@keyframes zoomOut {\r\n  from {\r\n    opacity: 1;\r\n    transform: scale(1); // Start with 1 scale (normal size)\r\n  }\r\n  to {\r\n    opacity: 0;\r\n    transform: scale(0); // End with 0 scale\r\n  }\r\n}\r\n</style>\r\n"],"mappings":";AAuDA,SAAAA,UAAA;AACA;EACAC,KAAA;IACA;MACAC,SAAA;MACAC,WAAA;MACAC,SAAA;MACAC,SAAA;MACAC,eAAA;IACA;EACA;EAEAC,QAAA;IACA,GAAAP,UAAA;MAAAQ,eAAA;IAAA;EACA;EAEAC,OAAA;IACAC,WAAA;MACA,KAAAR,SAAA;MACAS,UAAA;QACA,KAAAC,MAAA,CAAAC,MAAA;MACA;IACA;IAEAC,yBAAA;MACA,SAAAN,eAAA,CAAAO,aAAA,CAAAC,QAAA;QACA,KAAAb,WAAA;MACA;QACA,KAAAA,WAAA;MACA;MAEA,SAAAK,eAAA,CAAAO,aAAA,CAAAC,QAAA;QACA,KAAAZ,SAAA;MACA;QACA,KAAAA,SAAA;MACA;MAEA,SAAAI,eAAA,CAAAO,aAAA,CAAAC,QAAA;QACA,KAAAX,SAAA;MACA;QACA,KAAAA,SAAA;MACA;MAEA,SAAAG,eAAA,CAAAO,aAAA,CAAAC,QAAA;QACA,KAAAV,eAAA;MACA;QACA,KAAAA,eAAA;MACA;IACA;IAEAW,kBAAAC,KAAA;MACA,MAAAC,YAAA,QAAAX,eAAA,CAAAO,aAAA;MACA,IAAAG,KAAA,CAAAE,MAAA,CAAAC,OAAA;QACA,MAAAC,aAAA,GAAAH,YAAA,CAAAI,OAAA,CAAAL,KAAA,CAAAE,MAAA,CAAAI,KAAA;;QAEA;QACA,IAAAF,aAAA;UACA;UACAH,YAAA,CAAAM,MAAA,CAAAH,aAAA;QACA;MACA;QACAH,YAAA,CAAAO,IAAA,CAAAR,KAAA,CAAAE,MAAA,CAAAI,KAAA;MACA;IACA;EACA;EAEAG,QAAA;IACA,KAAAb,wBAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}