{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nconst userServiceState = {\n  state: {\n    showUserAddForm: false,\n    selectedFiltersUser: [],\n    selectedFiltersDatesUser: []\n  },\n  mutations: {\n    toggleUserAddForm(state, showForm) {\n      state.showUserAddForm = showForm;\n    },\n    addSelectedFilterUser(state, {\n      filterName,\n      filterValue\n    }) {\n      let valueChangeObject; // Initialize a variable to hold the object to be updated\n      let exists; // Initialize a variable to check if the object already exists\n      // Loop through the selectedFiltersUser array to find the object\n      for (const filter of state.selectedFiltersUser) {\n        if (filter.filterName === filterName) {\n          exists = true;\n          valueChangeObject = filter;\n          break;\n        }\n      }\n\n      // If the object doesn't exist, add it to the selectedFiltersUser array\n      if (!exists) {\n        state.selectedFiltersUser.push({\n          filterName,\n          filterValue\n        });\n      }\n\n      // If the object exists and the value needs to be changed\n      if (exists && valueChangeObject.filterValue !== filterValue) {\n        // Find the index of the object to delete based on filterName\n        const indexToDelete = state.selectedFiltersUser.findIndex(filter => filter.filterName === filterName);\n\n        // Remove the existing object from the selectedFiltersUser array\n        state.selectedFiltersUser.splice(indexToDelete, 1);\n\n        // Push a new object with the updated filterValue\n        state.selectedFiltersUser.push({\n          filterName,\n          filterValue\n        });\n      }\n    },\n    removeSelectedFilterUser(state, filterName) {\n      // Use filter method to create a new array without the filter to be removed\n      state.selectedFiltersUser = state.selectedFiltersUser.filter(filter => filter.filterName !== filterName);\n    },\n    addSelectedFilterDateUser(state, {\n      filterName,\n      filterValue\n    }) {\n      console.log(\"AAA\");\n      let valueChangeObject; // Initialize a variable to hold the object to be updated\n      let exists; // Initialize a variable to check if the object already exists\n      // Loop through the selectedFiltersDatesUser array to find the object\n      for (const filter of state.selectedFiltersDatesUser) {\n        if (filter.filterName === filterName) {\n          exists = true;\n          valueChangeObject = filter;\n          break;\n        }\n      }\n\n      // If the object doesn't exist, add it to the selectedFiltersDatesUser array\n      if (!exists) {\n        state.selectedFiltersDatesUser.push({\n          filterName,\n          filterValue\n        });\n      }\n\n      // If the object exists and the value needs to be changed\n      if (exists && valueChangeObject.filterValue !== filterValue) {\n        // Find the index of the object to delete based on filterName\n        const indexToDelete = state.selectedFiltersDatesUser.findIndex(filter => filter.filterName === filterName);\n\n        // Remove the existing object from the selectedFiltersDatesUser array\n        state.selectedFiltersDatesUser.splice(indexToDelete, 1);\n\n        // Push a new object with the updated filterValue\n        state.selectedFiltersDatesUser.push({\n          filterName,\n          filterValue\n        });\n      }\n    },\n    removeSelectedFilterDateUser(state, filterName) {\n      // Use filter method to create a new array without the filter to be removed\n      console.log(\"AAA\");\n      state.selectedFiltersDatesUser = state.selectedFiltersDatesUser.filter(filter => filter.filterName !== filterName);\n    }\n  },\n  actions: {\n    toggleUserAddForm({\n      commit\n    }, showForm) {\n      commit(\"toggleUserAddForm\", showForm);\n    },\n    addSelectedFilterUser({\n      commit\n    }, {\n      filterName,\n      filterValue\n    }) {\n      commit(\"addSelectedFilterUser\", {\n        filterName,\n        filterValue\n      });\n    },\n    removeSelectedFilterUser({\n      commit\n    }, filterName) {\n      commit(\"removeSelectedFilterUser\", filterName);\n    },\n    addSelectedFilterDateUser({\n      commit\n    }, {\n      filterName,\n      filterValue\n    }) {\n      commit(\"addSelectedFilterDateUser\", {\n        filterName,\n        filterValue\n      });\n    },\n    removeSelectedFilterDateUser({\n      commit\n    }, filterName) {\n      commit(\"removeSelectedFilterDateUser\", filterName);\n    }\n  },\n  getters: {\n    showUserAddForm: state => state.showUserAddForm,\n    selectedFiltersUser: state => state.selectedFiltersUser\n  }\n};\nexport default userServiceState;","map":{"version":3,"names":["userServiceState","state","showUserAddForm","selectedFiltersUser","selectedFiltersDatesUser","mutations","toggleUserAddForm","showForm","addSelectedFilterUser","filterName","filterValue","valueChangeObject","exists","filter","push","indexToDelete","findIndex","splice","removeSelectedFilterUser","addSelectedFilterDateUser","console","log","removeSelectedFilterDateUser","actions","commit","getters"],"sources":["C:/Users/jdlou/OneDrive/Plocha/crmproject/crm-frontend/src/Users-Frontend/State/userServiceFiltersAndFormsState.js"],"sourcesContent":["const userServiceState = {\r\n  state: {\r\n    showUserAddForm: false,\r\n    selectedFiltersUser: [],\r\n    selectedFiltersDatesUser: [],\r\n  },\r\n  mutations: {\r\n    toggleUserAddForm(state, showForm) {\r\n      state.showUserAddForm = showForm;\r\n    },\r\n    addSelectedFilterUser(state, { filterName, filterValue }) {\r\n      let valueChangeObject; // Initialize a variable to hold the object to be updated\r\n      let exists; // Initialize a variable to check if the object already exists\r\n      // Loop through the selectedFiltersUser array to find the object\r\n      for (const filter of state.selectedFiltersUser) {\r\n        if (filter.filterName === filterName) {\r\n          exists = true;\r\n          valueChangeObject = filter;\r\n          break;\r\n        }\r\n      }\r\n\r\n      // If the object doesn't exist, add it to the selectedFiltersUser array\r\n      if (!exists) {\r\n        state.selectedFiltersUser.push({ filterName, filterValue });\r\n      }\r\n\r\n      // If the object exists and the value needs to be changed\r\n      if (exists && valueChangeObject.filterValue !== filterValue) {\r\n        // Find the index of the object to delete based on filterName\r\n        const indexToDelete = state.selectedFiltersUser.findIndex(\r\n          (filter) => filter.filterName === filterName\r\n        );\r\n\r\n        // Remove the existing object from the selectedFiltersUser array\r\n        state.selectedFiltersUser.splice(indexToDelete, 1);\r\n\r\n        // Push a new object with the updated filterValue\r\n        state.selectedFiltersUser.push({ filterName, filterValue });\r\n      }\r\n    },\r\n    removeSelectedFilterUser(state, filterName) {\r\n      // Use filter method to create a new array without the filter to be removed\r\n      state.selectedFiltersUser = state.selectedFiltersUser.filter(\r\n        (filter) => filter.filterName !== filterName\r\n      );\r\n    },\r\n\r\n    addSelectedFilterDateUser(state, { filterName, filterValue }) {\r\n      console.log(\"AAA\");\r\n\r\n      let valueChangeObject; // Initialize a variable to hold the object to be updated\r\n      let exists; // Initialize a variable to check if the object already exists\r\n      // Loop through the selectedFiltersDatesUser array to find the object\r\n      for (const filter of state.selectedFiltersDatesUser) {\r\n        if (filter.filterName === filterName) {\r\n          exists = true;\r\n          valueChangeObject = filter;\r\n          break;\r\n        }\r\n      }\r\n\r\n      // If the object doesn't exist, add it to the selectedFiltersDatesUser array\r\n      if (!exists) {\r\n        state.selectedFiltersDatesUser.push({ filterName, filterValue });\r\n      }\r\n\r\n      // If the object exists and the value needs to be changed\r\n      if (exists && valueChangeObject.filterValue !== filterValue) {\r\n        // Find the index of the object to delete based on filterName\r\n        const indexToDelete = state.selectedFiltersDatesUser.findIndex(\r\n          (filter) => filter.filterName === filterName\r\n        );\r\n\r\n        // Remove the existing object from the selectedFiltersDatesUser array\r\n        state.selectedFiltersDatesUser.splice(indexToDelete, 1);\r\n\r\n        // Push a new object with the updated filterValue\r\n        state.selectedFiltersDatesUser.push({ filterName, filterValue });\r\n      }\r\n    },\r\n    removeSelectedFilterDateUser(state, filterName) {\r\n      // Use filter method to create a new array without the filter to be removed\r\n      console.log(\"AAA\");\r\n      state.selectedFiltersDatesUser = state.selectedFiltersDatesUser.filter(\r\n        (filter) => filter.filterName !== filterName\r\n      );\r\n    },\r\n  },\r\n  actions: {\r\n    toggleUserAddForm({ commit }, showForm) {\r\n      commit(\"toggleUserAddForm\", showForm);\r\n    },\r\n    addSelectedFilterUser({ commit }, { filterName, filterValue }) {\r\n      commit(\"addSelectedFilterUser\", { filterName, filterValue });\r\n    },\r\n    removeSelectedFilterUser({ commit }, filterName) {\r\n      commit(\"removeSelectedFilterUser\", filterName);\r\n    },\r\n\r\n    addSelectedFilterDateUser({ commit }, { filterName, filterValue }) {\r\n      commit(\"addSelectedFilterDateUser\", { filterName, filterValue });\r\n    },\r\n    removeSelectedFilterDateUser({ commit }, filterName) {\r\n      commit(\"removeSelectedFilterDateUser\", filterName);\r\n    },\r\n  },\r\n  getters: {\r\n    showUserAddForm: (state) => state.showUserAddForm,\r\n    selectedFiltersUser: (state) => state.selectedFiltersUser,\r\n  },\r\n};\r\n\r\nexport default userServiceState;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}