{"ast":null,"code":"import TableView from \"../../Dashboard/Components/Core/TableView.vue\";\nimport TableViewFooter from \"../../Dashboard/Components/Core/TableViewFooter.vue\";\nimport AddUserForm from \"./AddUserForm.vue\";\nimport { mapGetters } from \"vuex\";\nexport default {\n  data() {\n    return {\n      filterName: \"First name\",\n      filterValue: \"\",\n      userTableRows: [{\n        displayText: \"First name\",\n        value: \"first_name\",\n        sortable: true,\n        sortBy: \"alphabethical\",\n        filterable: true\n      }, {\n        displayText: \"Last name\",\n        value: \"last_name\",\n        sortable: true,\n        sortBy: \"alphabethical\",\n        filterable: true\n      }, {\n        displayText: \"User state\",\n        value: \"state\",\n        sortable: true,\n        sortBy: \"number\"\n      }, {\n        displayText: \"Email\",\n        value: \"email\",\n        sortable: true,\n        sortBy: \"alphabethical\",\n        filterable: true\n      }, {\n        displayText: \"Roles\",\n        value: \"role_ids\",\n        filterable: true\n      }, {\n        displayText: \"Telephone\",\n        value: \"tel_number\",\n        filterable: true,\n        sortable: true,\n        sortBy: \"number\"\n      }, {\n        displayText: \"Created\",\n        value: \"created_at\",\n        filterable: false,\n        sortable: true,\n        sortBy: \"date\"\n      }],\n      selectedIndex: 0\n    };\n  },\n  components: {\n    TableView,\n    TableViewFooter,\n    AddUserForm\n  },\n  computed: {\n    ...mapGetters({\n      isUserLogged: \"isUserLogged\",\n      showUserAddForm: \"showUserAddForm\",\n      selectedFiltersUser: \"selectedFiltersUser\",\n      selectedFiltersDatesUser: \"selectedFiltersDatesUser\",\n      users: \"users\",\n      usersToChange: \"usersToChange\",\n      page: \"page\",\n      total: \"total\",\n      lastPage: \"lastPage\"\n    }),\n    filterableUserTableRows() {\n      return this.userTableRows.filter(row => row.filterable);\n    }\n  },\n  methods: {\n    showAddUserForm() {\n      this.$store.commit(\"toggleUserAddForm\", true);\n    },\n    async addFilter() {\n      if (this.filterValue.length === 0) {\n        return;\n      }\n      const selectedRow = this.filterableUserTableRows[this.selectedIndex];\n      if (!selectedRow) {\n        return;\n      }\n      await this.$store.commit(\"addSelectedFilterUser\", {\n        filterName: selectedRow.value,\n        filterValue: this.filterValue\n      });\n      this.filterValue = \"\";\n      await this.$store.dispatch(\"getUsersWithFilters\");\n    },\n    async removeFilter(collumName) {\n      await this.$store.commit(\"removeSelectedFilterUser\", collumName);\n      await this.$store.dispatch(\"getUsersWithFilters\");\n    },\n    showRemoveUserForm(message) {\n      if (this.usersToChange.length === 0) {\n        return;\n      }\n      this.$store.commit(\"showDoYouWantToModal\", message);\n      this.$store.dispatch(\"setDoYouWantToModalFunction\", \"deleteUsers\");\n    },\n    showUserChangeStateForm(message, stateToChange) {\n      if (this.usersToChange.length === 0) {\n        return;\n      }\n      this.$store.dispatch(\"setStateToChange\", stateToChange);\n      this.$store.commit(\"showDoYouWantToModal\", message);\n      this.$store.dispatch(\"setDoYouWantToModalFunction\", \"updateUsersState\");\n    },\n    async addFilterDate(collumName, ascending) {\n      await this.$store.commit(\"addSelectedFilterDateUser\", {\n        filterName: collumName,\n        ascending\n      });\n      await this.$store.dispatch(\"getUsersWithFilters\");\n    },\n    async removeFilterDate(collumName) {\n      await this.$store.commit(\"removeSelectedFilterDateUser\", collumName);\n      await this.$store.dispatch(\"getUsersWithFilters\");\n    },\n    setIndexOfFilter(rowIndex) {\n      this.selectedIndex = rowIndex;\n    },\n    setValuesToChange(valuesToChange) {\n      this.$store.dispatch(\"setUsersToChange\", valuesToChange);\n    },\n    addPage() {\n      this.$store.dispatch(\"setPage\", this.page + 1);\n      if (this.selectedFiltersUser.length > 0 || this.selectedFiltersDatesUser.length > 0) {} else {}\n      this.$store.dispatch(\"getUsers\");\n    },\n    removePage() {\n      this.$store.dispatch(\"setPage\", this.page - 1);\n      if (this.selectedFiltersUser.length > 0 || this.selectedFiltersDatesUser.length > 0) {} else {}\n      this.$store.dispatch(\"getUsers\");\n    }\n  },\n  async mounted() {\n    this.$store.dispatch(\"getUsers\");\n  }\n};","map":{"version":3,"names":["TableView","TableViewFooter","AddUserForm","mapGetters","data","filterName","filterValue","userTableRows","displayText","value","sortable","sortBy","filterable","selectedIndex","components","computed","isUserLogged","showUserAddForm","selectedFiltersUser","selectedFiltersDatesUser","users","usersToChange","page","total","lastPage","filterableUserTableRows","filter","row","methods","showAddUserForm","$store","commit","addFilter","length","selectedRow","dispatch","removeFilter","collumName","showRemoveUserForm","message","showUserChangeStateForm","stateToChange","addFilterDate","ascending","removeFilterDate","setIndexOfFilter","rowIndex","setValuesToChange","valuesToChange","addPage","removePage","mounted"],"sources":["src/Users-Frontend/Components/UsersDashboard.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"main-bar-buttons\">\r\n      <div class=\"main-bar-add-button-container\">\r\n        <button @click=\"showAddUserForm\">\r\n          User Add\r\n\r\n          <i class=\"material-icons\"> person_add </i>\r\n        </button>\r\n\r\n        <button @click=\"showRemoveUserForm('Do you want to delete user')\">\r\n          User Remove\r\n\r\n          <i class=\"material-icons\"> person_remove </i>\r\n        </button>\r\n      </div>\r\n\r\n      <div class=\"main-bar-filter-container\">\r\n        <select\r\n          @change=\"setIndexOfFilter($event.target.selectedIndex)\"\r\n          v-model=\"filterName\"\r\n        >\r\n          <option v-for=\"(row, index) in filterableUserTableRows\" :key=\"index\">\r\n            {{ row.displayText }}\r\n          </option>\r\n        </select>\r\n        <input v-model=\"filterValue\" type=\"text\" />\r\n        <button @click=\"addFilter\">Filter</button>\r\n      </div>\r\n\r\n      <div class=\"main-bar-service-button-container\">\r\n        <button\r\n          @click=\"\r\n            showUserChangeStateForm(\r\n              'Do you want to change state to pending ',\r\n              1\r\n            )\r\n          \"\r\n        >\r\n          Change to pending\r\n\r\n          <i class=\"material-icons\"> pending_actions </i>\r\n        </button>\r\n\r\n        <button\r\n          @click=\"\r\n            showUserChangeStateForm(\r\n              'Do you want to change state to pending ',\r\n              2\r\n            )\r\n          \"\r\n        >\r\n          Change to Active\r\n\r\n          <i class=\"material-icons\"> how_to_reg </i>\r\n        </button>\r\n\r\n        <button\r\n          @click=\"\r\n            showUserChangeStateForm(\r\n              'Do you want to change state to pending ',\r\n              0\r\n            )\r\n          \"\r\n        >\r\n          Change to Block\r\n\r\n          <i class=\"material-icons\"> block </i>\r\n        </button>\r\n\r\n        <button>\r\n          Add Role\r\n          <i class=\"material-icons\"> add_circle </i>\r\n        </button>\r\n\r\n        <button>\r\n          Remove Role\r\n          <i class=\"material-icons\"> remove </i>\r\n        </button>\r\n      </div>\r\n    </div>\r\n    <table-view\r\n      :rows=\"userTableRows\"\r\n      :values=\"users\"\r\n      :removeFilterFunc=\"removeFilter\"\r\n      :filterValues=\"selectedFiltersUser\"\r\n      :filterValuesDate=\"selectedFiltersDatesUser\"\r\n      :addFilterDate=\"addFilterDate\"\r\n      :removeFilterDate=\"removeFilterDate\"\r\n      :idOfValueToChangeBy=\"'user_id'\"\r\n      :setValuesToChange=\"setValuesToChange\"\r\n    />\r\n    <table-view-footer\r\n      :lastPage=\"lastPage\"\r\n      :page=\"page\"\r\n      :total=\"total\"\r\n      :totalMessage=\"'Total number of users'\"\r\n      :decrementPage=\"removePage\"\r\n      :incrementPage=\"addPage\"\r\n    />\r\n    <add-user-form v-if=\"showUserAddForm\" />\r\n  </div>\r\n</template>\r\n<script>\r\nimport TableView from \"../../Dashboard/Components/Core/TableView.vue\";\r\nimport TableViewFooter from \"../../Dashboard/Components/Core/TableViewFooter.vue\";\r\nimport AddUserForm from \"./AddUserForm.vue\";\r\nimport { mapGetters } from \"vuex\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      filterName: \"First name\",\r\n      filterValue: \"\",\r\n      userTableRows: [\r\n        {\r\n          displayText: \"First name\",\r\n          value: \"first_name\",\r\n          sortable: true,\r\n          sortBy: \"alphabethical\",\r\n          filterable: true,\r\n        },\r\n        {\r\n          displayText: \"Last name\",\r\n          value: \"last_name\",\r\n          sortable: true,\r\n          sortBy: \"alphabethical\",\r\n          filterable: true,\r\n        },\r\n        {\r\n          displayText: \"User state\",\r\n          value: \"state\",\r\n          sortable: true,\r\n          sortBy: \"number\",\r\n        },\r\n        {\r\n          displayText: \"Email\",\r\n          value: \"email\",\r\n          sortable: true,\r\n          sortBy: \"alphabethical\",\r\n\r\n          filterable: true,\r\n        },\r\n        { displayText: \"Roles\", value: \"role_ids\", filterable: true },\r\n        {\r\n          displayText: \"Telephone\",\r\n          value: \"tel_number\",\r\n          filterable: true,\r\n\r\n          sortable: true,\r\n          sortBy: \"number\",\r\n        },\r\n        {\r\n          displayText: \"Created\",\r\n          value: \"created_at\",\r\n          filterable: false,\r\n          sortable: true,\r\n          sortBy: \"date\",\r\n        },\r\n      ],\r\n\r\n      selectedIndex: 0,\r\n    };\r\n  },\r\n  components: {\r\n    TableView,\r\n    TableViewFooter,\r\n    AddUserForm,\r\n  },\r\n\r\n  computed: {\r\n    ...mapGetters({\r\n      isUserLogged: \"isUserLogged\",\r\n      showUserAddForm: \"showUserAddForm\",\r\n      selectedFiltersUser: \"selectedFiltersUser\",\r\n      selectedFiltersDatesUser: \"selectedFiltersDatesUser\",\r\n      users: \"users\",\r\n      usersToChange: \"usersToChange\",\r\n      page: \"page\",\r\n      total: \"total\",\r\n      lastPage: \"lastPage\",\r\n    }),\r\n\r\n    filterableUserTableRows() {\r\n      return this.userTableRows.filter((row) => row.filterable);\r\n    },\r\n  },\r\n\r\n  methods: {\r\n    showAddUserForm() {\r\n      this.$store.commit(\"toggleUserAddForm\", true);\r\n    },\r\n    async addFilter() {\r\n      if (this.filterValue.length === 0) {\r\n        return;\r\n      }\r\n\r\n      const selectedRow = this.filterableUserTableRows[this.selectedIndex];\r\n      if (!selectedRow) {\r\n        return;\r\n      }\r\n\r\n      await this.$store.commit(\"addSelectedFilterUser\", {\r\n        filterName: selectedRow.value,\r\n        filterValue: this.filterValue,\r\n      });\r\n\r\n      this.filterValue = \"\";\r\n\r\n      await this.$store.dispatch(\"getUsersWithFilters\");\r\n    },\r\n\r\n    async removeFilter(collumName) {\r\n      await this.$store.commit(\"removeSelectedFilterUser\", collumName);\r\n\r\n      await this.$store.dispatch(\"getUsersWithFilters\");\r\n    },\r\n\r\n    showRemoveUserForm(message) {\r\n      if (this.usersToChange.length === 0) {\r\n        return;\r\n      }\r\n      this.$store.commit(\"showDoYouWantToModal\", message);\r\n      this.$store.dispatch(\"setDoYouWantToModalFunction\", \"deleteUsers\");\r\n    },\r\n\r\n    showUserChangeStateForm(message, stateToChange) {\r\n      if (this.usersToChange.length === 0) {\r\n        return;\r\n      }\r\n      this.$store.dispatch(\"setStateToChange\", stateToChange);\r\n\r\n      this.$store.commit(\"showDoYouWantToModal\", message);\r\n      this.$store.dispatch(\"setDoYouWantToModalFunction\", \"updateUsersState\");\r\n    },\r\n\r\n    async addFilterDate(collumName, ascending) {\r\n      await this.$store.commit(\"addSelectedFilterDateUser\", {\r\n        filterName: collumName,\r\n        ascending,\r\n      });\r\n\r\n      await this.$store.dispatch(\"getUsersWithFilters\");\r\n    },\r\n\r\n    async removeFilterDate(collumName) {\r\n      await this.$store.commit(\"removeSelectedFilterDateUser\", collumName);\r\n\r\n      await this.$store.dispatch(\"getUsersWithFilters\");\r\n    },\r\n\r\n    setIndexOfFilter(rowIndex) {\r\n      this.selectedIndex = rowIndex;\r\n    },\r\n\r\n    setValuesToChange(valuesToChange) {\r\n      this.$store.dispatch(\"setUsersToChange\", valuesToChange);\r\n    },\r\n\r\n    addPage() {\r\n      this.$store.dispatch(\"setPage\", this.page + 1);\r\n      if (\r\n        this.selectedFiltersUser.length > 0 ||\r\n        this.selectedFiltersDatesUser.length > 0\r\n      ) {\r\n      } else {\r\n      }\r\n      this.$store.dispatch(\"getUsers\");\r\n    },\r\n\r\n    removePage() {\r\n      this.$store.dispatch(\"setPage\", this.page - 1);\r\n      if (\r\n        this.selectedFiltersUser.length > 0 ||\r\n        this.selectedFiltersDatesUser.length > 0\r\n      ) {\r\n      } else {\r\n      }\r\n      this.$store.dispatch(\"getUsers\");\r\n    },\r\n  },\r\n\r\n  async mounted() {\r\n    this.$store.dispatch(\"getUsers\");\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.main-bar-buttons {\r\n  width: 100%;\r\n  height: 60px;\r\n  padding-left: 30px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n}\r\n\r\n.main-bar-add-button-container {\r\n  width: 350px;\r\n  display: flex;\r\n  align-items: center;\r\n  height: 100%;\r\n\r\n  button {\r\n    display: flex;\r\n    width: 150px;\r\n    height: 30px;\r\n    align-items: center;\r\n    justify-content: space-evenly;\r\n    margin: 0 10px;\r\n    background-color: #2c3968;\r\n    color: whitesmoke;\r\n    border: none;\r\n    border-radius: 2px;\r\n    cursor: pointer;\r\n    transition: 0.3s;\r\n    &:hover {\r\n      box-shadow: rgba(50, 50, 93, 0.25) 0px 13px 27px -5px,\r\n        rgba(0, 0, 0, 0.3) 0px 8px 16px -8px;\r\n    }\r\n  }\r\n}\r\n\r\n.main-bar-filter-container {\r\n  width: 500px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-evenly;\r\n  height: 100%;\r\n\r\n  button {\r\n    display: flex;\r\n    width: 120px;\r\n    height: 25px;\r\n    align-items: center;\r\n    justify-content: space-evenly;\r\n    margin: 0 10px;\r\n    background-color: #2c3968;\r\n    color: whitesmoke;\r\n    border: none;\r\n    border-radius: 2px;\r\n    letter-spacing: 3px;\r\n    cursor: pointer;\r\n    transition: 0.3s;\r\n    &:hover {\r\n      box-shadow: rgba(50, 50, 93, 0.25) 0px 13px 27px -5px,\r\n        rgba(0, 0, 0, 0.3) 0px 8px 16px -8px;\r\n    }\r\n  }\r\n\r\n  select {\r\n    width: 130px;\r\n    height: 25px;\r\n    background-color: #2c3968;\r\n    color: whitesmoke;\r\n    border: none;\r\n    outline: none;\r\n    border-radius: 2px;\r\n    cursor: pointer;\r\n    transition: 0.3s;\r\n    &:hover {\r\n      box-shadow: rgba(50, 50, 93, 0.25) 0px 13px 27px -5px,\r\n        rgba(0, 0, 0, 0.3) 0px 8px 16px -8px;\r\n    }\r\n  }\r\n\r\n  input {\r\n    width: 150px;\r\n    height: 25px;\r\n    background-color: #2c3968;\r\n    color: whitesmoke;\r\n    border: none;\r\n    outline: none;\r\n    border-radius: 2px;\r\n    cursor: pointer;\r\n    text-align: center;\r\n    transition: 0.3s;\r\n\r\n    &:focus {\r\n      background-color: #435b93;\r\n      box-shadow: 0 0 5px rgba(255, 255, 255, 0.7); /* Add box shadow on focus */\r\n    }\r\n  }\r\n}\r\n\r\n.main-bar-service-button-container {\r\n  width: 600px;\r\n  display: flex;\r\n  align-items: center;\r\n  height: 100%;\r\n  overflow-x: auto;\r\n  overflow-y: hidden;\r\n\r\n  button {\r\n    display: flex;\r\n    width: 180px;\r\n    flex: 0 0 auto;\r\n    height: 30px;\r\n    align-items: center;\r\n    justify-content: space-evenly;\r\n    margin: 0 10px;\r\n    background-color: #2c3968;\r\n    color: whitesmoke;\r\n    border: none;\r\n    border-radius: 2px;\r\n    font-size: 0.75rem;\r\n    cursor: pointer;\r\n    transition: 0.3s;\r\n\r\n    &:hover {\r\n      box-shadow: rgba(50, 50, 93, 0.25) 0px 13px 27px -5px,\r\n        rgba(0, 0, 0, 0.3) 0px 8px 16px -8px;\r\n    }\r\n  }\r\n}\r\n</style>\r\n"],"mappings":"AAwGA,OAAAA,SAAA;AACA,OAAAC,eAAA;AACA,OAAAC,WAAA;AACA,SAAAC,UAAA;AAEA;EACAC,KAAA;IACA;MACAC,UAAA;MACAC,WAAA;MACAC,aAAA,GACA;QACAC,WAAA;QACAC,KAAA;QACAC,QAAA;QACAC,MAAA;QACAC,UAAA;MACA,GACA;QACAJ,WAAA;QACAC,KAAA;QACAC,QAAA;QACAC,MAAA;QACAC,UAAA;MACA,GACA;QACAJ,WAAA;QACAC,KAAA;QACAC,QAAA;QACAC,MAAA;MACA,GACA;QACAH,WAAA;QACAC,KAAA;QACAC,QAAA;QACAC,MAAA;QAEAC,UAAA;MACA,GACA;QAAAJ,WAAA;QAAAC,KAAA;QAAAG,UAAA;MAAA,GACA;QACAJ,WAAA;QACAC,KAAA;QACAG,UAAA;QAEAF,QAAA;QACAC,MAAA;MACA,GACA;QACAH,WAAA;QACAC,KAAA;QACAG,UAAA;QACAF,QAAA;QACAC,MAAA;MACA,EACA;MAEAE,aAAA;IACA;EACA;EACAC,UAAA;IACAd,SAAA;IACAC,eAAA;IACAC;EACA;EAEAa,QAAA;IACA,GAAAZ,UAAA;MACAa,YAAA;MACAC,eAAA;MACAC,mBAAA;MACAC,wBAAA;MACAC,KAAA;MACAC,aAAA;MACAC,IAAA;MACAC,KAAA;MACAC,QAAA;IACA;IAEAC,wBAAA;MACA,YAAAlB,aAAA,CAAAmB,MAAA,CAAAC,GAAA,IAAAA,GAAA,CAAAf,UAAA;IACA;EACA;EAEAgB,OAAA;IACAC,gBAAA;MACA,KAAAC,MAAA,CAAAC,MAAA;IACA;IACA,MAAAC,UAAA;MACA,SAAA1B,WAAA,CAAA2B,MAAA;QACA;MACA;MAEA,MAAAC,WAAA,QAAAT,uBAAA,MAAAZ,aAAA;MACA,KAAAqB,WAAA;QACA;MACA;MAEA,WAAAJ,MAAA,CAAAC,MAAA;QACA1B,UAAA,EAAA6B,WAAA,CAAAzB,KAAA;QACAH,WAAA,OAAAA;MACA;MAEA,KAAAA,WAAA;MAEA,WAAAwB,MAAA,CAAAK,QAAA;IACA;IAEA,MAAAC,aAAAC,UAAA;MACA,WAAAP,MAAA,CAAAC,MAAA,6BAAAM,UAAA;MAEA,WAAAP,MAAA,CAAAK,QAAA;IACA;IAEAG,mBAAAC,OAAA;MACA,SAAAlB,aAAA,CAAAY,MAAA;QACA;MACA;MACA,KAAAH,MAAA,CAAAC,MAAA,yBAAAQ,OAAA;MACA,KAAAT,MAAA,CAAAK,QAAA;IACA;IAEAK,wBAAAD,OAAA,EAAAE,aAAA;MACA,SAAApB,aAAA,CAAAY,MAAA;QACA;MACA;MACA,KAAAH,MAAA,CAAAK,QAAA,qBAAAM,aAAA;MAEA,KAAAX,MAAA,CAAAC,MAAA,yBAAAQ,OAAA;MACA,KAAAT,MAAA,CAAAK,QAAA;IACA;IAEA,MAAAO,cAAAL,UAAA,EAAAM,SAAA;MACA,WAAAb,MAAA,CAAAC,MAAA;QACA1B,UAAA,EAAAgC,UAAA;QACAM;MACA;MAEA,WAAAb,MAAA,CAAAK,QAAA;IACA;IAEA,MAAAS,iBAAAP,UAAA;MACA,WAAAP,MAAA,CAAAC,MAAA,iCAAAM,UAAA;MAEA,WAAAP,MAAA,CAAAK,QAAA;IACA;IAEAU,iBAAAC,QAAA;MACA,KAAAjC,aAAA,GAAAiC,QAAA;IACA;IAEAC,kBAAAC,cAAA;MACA,KAAAlB,MAAA,CAAAK,QAAA,qBAAAa,cAAA;IACA;IAEAC,QAAA;MACA,KAAAnB,MAAA,CAAAK,QAAA,iBAAAb,IAAA;MACA,IACA,KAAAJ,mBAAA,CAAAe,MAAA,QACA,KAAAd,wBAAA,CAAAc,MAAA,MACA,CACA,QACA;MACA,KAAAH,MAAA,CAAAK,QAAA;IACA;IAEAe,WAAA;MACA,KAAApB,MAAA,CAAAK,QAAA,iBAAAb,IAAA;MACA,IACA,KAAAJ,mBAAA,CAAAe,MAAA,QACA,KAAAd,wBAAA,CAAAc,MAAA,MACA,CACA,QACA;MACA,KAAAH,MAAA,CAAAK,QAAA;IACA;EACA;EAEA,MAAAgB,QAAA;IACA,KAAArB,MAAA,CAAAK,QAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}