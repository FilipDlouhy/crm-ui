{"ast":null,"code":"import Vue from \"vue\";\nimport VueRouter from \"vue-router\";\nimport UsersDashboard from \"../Users-Frontend/Components/UsersDashboard.vue\";\nimport RolesDashboard from \"../Users-Frontend/Components/RolesDashboard.vue\";\nimport AllContactsDashboard from \"../Contacts-frontend/Components/AllContactsDashboard.vue\";\nimport CustomersDashobard from \"../Contacts-frontend/Components/CustomersDashobard.vue\";\nimport store from \"@/store\";\nVue.use(VueRouter);\nconst routes = [{\n  path: \"/Users\",\n  component: UsersDashboard\n}, {\n  path: \"/Roles\",\n  component: RolesDashboard\n}, {\n  path: \"/Contacts/AllContacts\",\n  component: AllContactsDashboard\n}, {\n  path: \"/Contacts/Customers\",\n  component: AllContactsDashboard\n}, {\n  path: \"/\",\n  component: null\n}\n// Add a protected route that requires authentication\n];\n\nconst router = new VueRouter({\n  routes\n});\n\n// Add a navigation guard to check if a route requires authentication\nrouter.beforeEach(async (to, from, next) => {\n  await store.dispatch(\"checkUserLogin\");\n  if (store.getters.isUserLogged === false) {\n    if (to.path !== \"/\") {\n      next(\"/\");\n    } else {\n      next();\n    }\n  }\n  await store.dispatch(\"checkUserLogin\");\n  next();\n});\nexport default router;","map":{"version":3,"names":["Vue","VueRouter","UsersDashboard","RolesDashboard","AllContactsDashboard","CustomersDashobard","store","use","routes","path","component","router","beforeEach","to","from","next","dispatch","getters","isUserLogged"],"sources":["C:/Users/jdlou/OneDrive/Plocha/crmproject/crm-frontend/src/router/index.js"],"sourcesContent":["import Vue from \"vue\";\nimport VueRouter from \"vue-router\";\nimport UsersDashboard from \"../Users-Frontend/Components/UsersDashboard.vue\";\nimport RolesDashboard from \"../Users-Frontend/Components/RolesDashboard.vue\";\nimport AllContactsDashboard from \"../Contacts-frontend/Components/AllContactsDashboard.vue\";\nimport CustomersDashobard from \"../Contacts-frontend/Components/CustomersDashobard.vue\";\nimport store from \"@/store\";\n\nVue.use(VueRouter);\n\nconst routes = [\n  { path: \"/Users\", component: UsersDashboard },\n  { path: \"/Roles\", component: RolesDashboard },\n  { path: \"/Contacts/AllContacts\", component: AllContactsDashboard },\n  { path: \"/Contacts/Customers\", component: AllContactsDashboard },\n  { path: \"/\", component: null },\n  // Add a protected route that requires authentication\n];\n\nconst router = new VueRouter({\n  routes,\n});\n\n// Add a navigation guard to check if a route requires authentication\nrouter.beforeEach(async (to, from, next) => {\n  await store.dispatch(\"checkUserLogin\");\n\n  if (store.getters.isUserLogged === false) {\n    if (to.path !== \"/\") {\n      next(\"/\");\n    } else {\n      next();\n    }\n  }\n  await store.dispatch(\"checkUserLogin\");\n  next();\n});\n\nexport default router;\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,cAAc,MAAM,iDAAiD;AAC5E,OAAOC,cAAc,MAAM,iDAAiD;AAC5E,OAAOC,oBAAoB,MAAM,0DAA0D;AAC3F,OAAOC,kBAAkB,MAAM,wDAAwD;AACvF,OAAOC,KAAK,MAAM,SAAS;AAE3BN,GAAG,CAACO,GAAG,CAACN,SAAS,CAAC;AAElB,MAAMO,MAAM,GAAG,CACb;EAAEC,IAAI,EAAE,QAAQ;EAAEC,SAAS,EAAER;AAAe,CAAC,EAC7C;EAAEO,IAAI,EAAE,QAAQ;EAAEC,SAAS,EAAEP;AAAe,CAAC,EAC7C;EAAEM,IAAI,EAAE,uBAAuB;EAAEC,SAAS,EAAEN;AAAqB,CAAC,EAClE;EAAEK,IAAI,EAAE,qBAAqB;EAAEC,SAAS,EAAEN;AAAqB,CAAC,EAChE;EAAEK,IAAI,EAAE,GAAG;EAAEC,SAAS,EAAE;AAAK;AAC7B;AAAA,CACD;;AAED,MAAMC,MAAM,GAAG,IAAIV,SAAS,CAAC;EAC3BO;AACF,CAAC,CAAC;;AAEF;AACAG,MAAM,CAACC,UAAU,CAAC,OAAOC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EAC1C,MAAMT,KAAK,CAACU,QAAQ,CAAC,gBAAgB,CAAC;EAEtC,IAAIV,KAAK,CAACW,OAAO,CAACC,YAAY,KAAK,KAAK,EAAE;IACxC,IAAIL,EAAE,CAACJ,IAAI,KAAK,GAAG,EAAE;MACnBM,IAAI,CAAC,GAAG,CAAC;IACX,CAAC,MAAM;MACLA,IAAI,CAAC,CAAC;IACR;EACF;EACA,MAAMT,KAAK,CAACU,QAAQ,CAAC,gBAAgB,CAAC;EACtCD,IAAI,CAAC,CAAC;AACR,CAAC,CAAC;AAEF,eAAeJ,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}