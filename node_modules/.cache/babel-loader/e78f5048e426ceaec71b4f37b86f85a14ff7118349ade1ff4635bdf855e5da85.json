{"ast":null,"code":"const contactHelper = {\n  checkContactFormValues(contact) {\n    for (const property in contact) {\n      if (contact[property] == null || contact[property].length === 0) {\n        return false;\n      }\n      if (property === \"email\" && !isValidEmail(contact[property])) {\n        return false;\n      }\n    }\n    return true;\n  },\n  async createContact() {\n    let contact;\n    if (this.personOrOrganization === \"person\") {\n      contact = {\n        personOrOrganization: this.personOrOrganization,\n        firstName: this.firstName,\n        lastName: this.lastName,\n        email: this.email,\n        telNumber: this.telNumber,\n        adress: this.adress\n      };\n    } else {\n      contact = {\n        personOrOrganization: this.personOrOrganization,\n        telNumber: this.telNumber,\n        adress: this.adress,\n        organizationName: this.organizationName,\n        contactEmail: this.contactEmail\n      };\n    }\n    const isContactFOk = contactHelper.checkContactFormValues(contact);\n    console.log(isContactFOk);\n  }\n};\nfunction isValidEmail(email) {\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  return emailRegex.test(email);\n}\nexport default contactHelper;","map":{"version":3,"names":["contactHelper","checkContactFormValues","contact","property","length","isValidEmail","createContact","personOrOrganization","firstName","lastName","email","telNumber","adress","organizationName","contactEmail","isContactFOk","console","log","emailRegex","test"],"sources":["C:/Users/jdlou/OneDrive/Plocha/crmproject/crm-frontend/src/Contacts-frontend/ContactHelper.js"],"sourcesContent":["const contactHelper = {\r\n  checkContactFormValues(contact) {\r\n    for (const property in contact) {\r\n      if (contact[property] == null || contact[property].length === 0) {\r\n        return false;\r\n      }\r\n\r\n      if (property === \"email\" && !isValidEmail(contact[property])) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  },\r\n\r\n  async createContact() {\r\n    let contact;\r\n\r\n    if (this.personOrOrganization === \"person\") {\r\n      contact = {\r\n        personOrOrganization: this.personOrOrganization,\r\n        firstName: this.firstName,\r\n        lastName: this.lastName,\r\n        email: this.email,\r\n        telNumber: this.telNumber,\r\n        adress: this.adress,\r\n      };\r\n    } else {\r\n      contact = {\r\n        personOrOrganization: this.personOrOrganization,\r\n        telNumber: this.telNumber,\r\n        adress: this.adress,\r\n        organizationName: this.organizationName,\r\n        contactEmail: this.contactEmail,\r\n      };\r\n    }\r\n\r\n    const isContactFOk = contactHelper.checkContactFormValues(contact);\r\n\r\n    console.log(isContactFOk);\r\n  },\r\n};\r\n\r\nfunction isValidEmail(email) {\r\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n  return emailRegex.test(email);\r\n}\r\n\r\nexport default contactHelper;\r\n"],"mappings":"AAAA,MAAMA,aAAa,GAAG;EACpBC,sBAAsBA,CAACC,OAAO,EAAE;IAC9B,KAAK,MAAMC,QAAQ,IAAID,OAAO,EAAE;MAC9B,IAAIA,OAAO,CAACC,QAAQ,CAAC,IAAI,IAAI,IAAID,OAAO,CAACC,QAAQ,CAAC,CAACC,MAAM,KAAK,CAAC,EAAE;QAC/D,OAAO,KAAK;MACd;MAEA,IAAID,QAAQ,KAAK,OAAO,IAAI,CAACE,YAAY,CAACH,OAAO,CAACC,QAAQ,CAAC,CAAC,EAAE;QAC5D,OAAO,KAAK;MACd;IACF;IACA,OAAO,IAAI;EACb,CAAC;EAED,MAAMG,aAAaA,CAAA,EAAG;IACpB,IAAIJ,OAAO;IAEX,IAAI,IAAI,CAACK,oBAAoB,KAAK,QAAQ,EAAE;MAC1CL,OAAO,GAAG;QACRK,oBAAoB,EAAE,IAAI,CAACA,oBAAoB;QAC/CC,SAAS,EAAE,IAAI,CAACA,SAAS;QACzBC,QAAQ,EAAE,IAAI,CAACA,QAAQ;QACvBC,KAAK,EAAE,IAAI,CAACA,KAAK;QACjBC,SAAS,EAAE,IAAI,CAACA,SAAS;QACzBC,MAAM,EAAE,IAAI,CAACA;MACf,CAAC;IACH,CAAC,MAAM;MACLV,OAAO,GAAG;QACRK,oBAAoB,EAAE,IAAI,CAACA,oBAAoB;QAC/CI,SAAS,EAAE,IAAI,CAACA,SAAS;QACzBC,MAAM,EAAE,IAAI,CAACA,MAAM;QACnBC,gBAAgB,EAAE,IAAI,CAACA,gBAAgB;QACvCC,YAAY,EAAE,IAAI,CAACA;MACrB,CAAC;IACH;IAEA,MAAMC,YAAY,GAAGf,aAAa,CAACC,sBAAsB,CAACC,OAAO,CAAC;IAElEc,OAAO,CAACC,GAAG,CAACF,YAAY,CAAC;EAC3B;AACF,CAAC;AAED,SAASV,YAAYA,CAACK,KAAK,EAAE;EAC3B,MAAMQ,UAAU,GAAG,4BAA4B;EAC/C,OAAOA,UAAU,CAACC,IAAI,CAACT,KAAK,CAAC;AAC/B;AAEA,eAAeV,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}