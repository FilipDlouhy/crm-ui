{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      checkAll: false\n    };\n  },\n  props: {\n    rows: [],\n    values: [],\n    removeFilterFunc: Function,\n    filterValues: [],\n    filterValuesDate: []\n  },\n  computed: {\n    renderValues() {\n      const rowNames = this.rows.map(row => row.value);\n      const formattedValues = [];\n      this.values.map(obj => {\n        const renderObjs = {};\n        rowNames.map(rowName => {\n          renderObjs[rowName] = obj[rowName];\n        });\n        formattedValues.push(renderObjs);\n      });\n      return formattedValues;\n    }\n  },\n  methods: {\n    toggleSelectAll() {\n      this.checkAll = !this.checkAll;\n      this.values.map((value, index) => {\n        const refName = this.generateRefName(index);\n        this.$refs[refName][0].checked = this.checkAll;\n      });\n    },\n    handleRowClick(collumValues) {\n      console.log(collumValues);\n    },\n    generateRefName(index) {\n      return `normalRowCheckBox${index}`;\n    },\n    addFilterDate(collumName, filterValue) {\n      this.$store.commit(\"addSelectedFilterDateUser\", {\n        filterName: collumName,\n        filterValue\n      });\n    },\n    removeFilterDate(collumName) {\n      this.$store.commit(\"removeSelectedFilterDateUser\", collumName);\n    }\n  }\n};","map":{"version":3,"names":["data","checkAll","props","rows","values","removeFilterFunc","Function","filterValues","filterValuesDate","computed","renderValues","rowNames","map","row","value","formattedValues","obj","renderObjs","rowName","push","methods","toggleSelectAll","index","refName","generateRefName","$refs","checked","handleRowClick","collumValues","console","log","addFilterDate","collumName","filterValue","$store","commit","filterName","removeFilterDate"],"sources":["src/Dashboard/Components/Core/TableView.vue"],"sourcesContent":["<template>\r\n  <div class=\"tableview-bar-dashboard\">\r\n    <div class=\"tableview-bar-dashboard-main-row\">\r\n      <div v-for=\"(collumName, index) in rows\" :key=\"index\">\r\n        <div v-if=\"index === 0\">\r\n          <input type=\"checkbox\" @click=\"toggleSelectAll\" />\r\n        </div>\r\n        <p @click=\"removeFilterDate(collumName.displayText)\">\r\n          {{ collumName.displayText }}\r\n        </p>\r\n\r\n        <span>\r\n          <i\r\n            v-if=\"\r\n              filterValues.some((filter) => filter.filterName === collumName)\r\n            \"\r\n            @click=\"removeFilterFunc(collumName)\"\r\n            class=\"material-icons\"\r\n          >\r\n            filter_alt\r\n          </i>\r\n        </span>\r\n\r\n        <span>\r\n          <i\r\n            v-if=\"\r\n              filterValuesDate.some(\r\n                (filter) =>\r\n                  filter.filterName === collumName &&\r\n                  filter.filterValue === false\r\n              ) ||\r\n              !filterValuesDate.some(\r\n                (filter) => filter.filterName === collumName\r\n              )\r\n            \"\r\n            @click=\"addFilterDate(collumName, false)\"\r\n            class=\"material-icons tableViewSpanIconShow\"\r\n          >\r\n            expand_less\r\n          </i>\r\n\r\n          <div\r\n            v-if=\"\r\n              filterValuesDate.some(\r\n                (filter) =>\r\n                  filter.filterName === collumName &&\r\n                  filter.filterValue === true\r\n              ) ||\r\n              !filterValuesDate.some(\r\n                (filter) => filter.filterName === collumName\r\n              )\r\n            \"\r\n          ></div>\r\n\r\n          <i\r\n            v-if=\"\r\n              filterValuesDate.some(\r\n                (filter) =>\r\n                  filter.filterName === collumName &&\r\n                  filter.filterValue === true\r\n              ) ||\r\n              !filterValuesDate.some(\r\n                (filter) => filter.filterName === collumName\r\n              )\r\n            \"\r\n            @click=\"addFilterDate(collumName, true)\"\r\n            class=\"material-icons tableViewSpanIconShow\"\r\n          >\r\n            expand_more\r\n          </i>\r\n\r\n          <div\r\n            v-if=\"\r\n              filterValuesDate.some(\r\n                (filter) =>\r\n                  filter.filterName === collumName &&\r\n                  filter.filterValue === false\r\n              ) ||\r\n              !filterValuesDate.some(\r\n                (filter) => filter.filterName === collumName\r\n              )\r\n            \"\r\n          ></div>\r\n        </span>\r\n      </div>\r\n    </div>\r\n\r\n    <div\r\n      class=\"tableview-bar-dashboard-nomal-row\"\r\n      v-for=\"(collumValues, MainIndex) in renderValues\"\r\n      :key=\"MainIndex\"\r\n      @click=\"handleRowClick(collumValues)\"\r\n    >\r\n      <div\r\n        v-for=\"(collumValue, index) in Object.values(collumValues)\"\r\n        :key=\"index\"\r\n      >\r\n        <div v-if=\"index === 0\">\r\n          <input type=\"checkbox\" :ref=\"generateRefName(MainIndex)\" />\r\n        </div>\r\n        <p>{{ collumValue }}</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      checkAll: false,\r\n    };\r\n  },\r\n\r\n  props: {\r\n    rows: [],\r\n    values: [],\r\n    removeFilterFunc: Function,\r\n    filterValues: [],\r\n    filterValuesDate: [],\r\n  },\r\n\r\n  computed: {\r\n    renderValues() {\r\n      const rowNames = this.rows.map((row) => row.value);\r\n      const formattedValues = [];\r\n\r\n      this.values.map((obj) => {\r\n        const renderObjs = {};\r\n        rowNames.map((rowName) => {\r\n          renderObjs[rowName] = obj[rowName];\r\n        });\r\n\r\n        formattedValues.push(renderObjs);\r\n      });\r\n\r\n      return formattedValues;\r\n    },\r\n  },\r\n\r\n  methods: {\r\n    toggleSelectAll() {\r\n      this.checkAll = !this.checkAll;\r\n      this.values.map((value, index) => {\r\n        const refName = this.generateRefName(index);\r\n\r\n        this.$refs[refName][0].checked = this.checkAll;\r\n      });\r\n    },\r\n\r\n    handleRowClick(collumValues) {\r\n      console.log(collumValues);\r\n    },\r\n    generateRefName(index) {\r\n      return `normalRowCheckBox${index}`;\r\n    },\r\n\r\n    addFilterDate(collumName, filterValue) {\r\n      this.$store.commit(\"addSelectedFilterDateUser\", {\r\n        filterName: collumName,\r\n        filterValue,\r\n      });\r\n    },\r\n\r\n    removeFilterDate(collumName) {\r\n      this.$store.commit(\"removeSelectedFilterDateUser\", collumName);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.tableview-bar-dashboard {\r\n  width: 1645px;\r\n  height: 820px;\r\n  border-bottom: 2px solid #2c3968;\r\n  border-top: 2px solid #2c3968;\r\n  overflow: auto;\r\n}\r\n\r\n.tableview-bar-dashboard-main-row {\r\n  width: 1645px; /* taking width larger then the parent's width */\r\n  height: 45px;\r\n  background-color: #2c3968;\r\n  display: flex;\r\n  flex: 0 0 auto;\r\n\r\n  div {\r\n    width: 220px;\r\n    height: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    color: whitesmoke;\r\n    font-size: 1.25rem;\r\n\r\n    p {\r\n      &:hover {\r\n        cursor: pointer;\r\n      }\r\n    }\r\n\r\n    div {\r\n      width: 30px;\r\n      height: 100%;\r\n      border-right: none;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      margin-right: 5px;\r\n      input {\r\n        cursor: pointer;\r\n        width: 17.5px;\r\n        height: 17.5px;\r\n      }\r\n    }\r\n\r\n    span {\r\n      padding-top: 2px;\r\n      padding-bottom: 2px;\r\n      width: 20px;\r\n      height: 100%;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      flex-direction: column;\r\n      margin-left: 10px;\r\n      i {\r\n        font-size: 1.5rem;\r\n        cursor: pointer;\r\n        transition: 0.3s;\r\n        &:hover {\r\n          color: black;\r\n        }\r\n      }\r\n\r\n      div {\r\n        width: 24px;\r\n        height: 24px;\r\n      }\r\n    }\r\n\r\n    i {\r\n      font-size: 1.5rem;\r\n      cursor: pointer;\r\n      transition: 0.3s;\r\n    }\r\n  }\r\n}\r\n\r\n.tableViewSpanIconShow {\r\n  font-size: 1.5rem;\r\n  cursor: pointer;\r\n  transition: 0.3s;\r\n  &:hover {\r\n    color: black;\r\n  }\r\n}\r\n\r\n.tableview-bar-dashboard-nomal-row {\r\n  width: 100%;\r\n  height: 35px;\r\n  display: flex;\r\n  border-bottom: 1px solid #2c3968;\r\n  div {\r\n    width: 220px;\r\n    height: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    word-wrap: break-word;\r\n    color: black;\r\n    font-size: 0.8rem;\r\n    border-right: 1px solid #2c3968;\r\n    padding: 1px;\r\n\r\n    div {\r\n      width: 30px;\r\n      height: 100%;\r\n      border-right: none;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      input {\r\n        cursor: pointer;\r\n        width: 15px;\r\n        height: 15px;\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n"],"mappings":";AA2GA;EACAA,KAAA;IACA;MACAC,QAAA;IACA;EACA;EAEAC,KAAA;IACAC,IAAA;IACAC,MAAA;IACAC,gBAAA,EAAAC,QAAA;IACAC,YAAA;IACAC,gBAAA;EACA;EAEAC,QAAA;IACAC,aAAA;MACA,MAAAC,QAAA,QAAAR,IAAA,CAAAS,GAAA,CAAAC,GAAA,IAAAA,GAAA,CAAAC,KAAA;MACA,MAAAC,eAAA;MAEA,KAAAX,MAAA,CAAAQ,GAAA,CAAAI,GAAA;QACA,MAAAC,UAAA;QACAN,QAAA,CAAAC,GAAA,CAAAM,OAAA;UACAD,UAAA,CAAAC,OAAA,IAAAF,GAAA,CAAAE,OAAA;QACA;QAEAH,eAAA,CAAAI,IAAA,CAAAF,UAAA;MACA;MAEA,OAAAF,eAAA;IACA;EACA;EAEAK,OAAA;IACAC,gBAAA;MACA,KAAApB,QAAA,SAAAA,QAAA;MACA,KAAAG,MAAA,CAAAQ,GAAA,EAAAE,KAAA,EAAAQ,KAAA;QACA,MAAAC,OAAA,QAAAC,eAAA,CAAAF,KAAA;QAEA,KAAAG,KAAA,CAAAF,OAAA,KAAAG,OAAA,QAAAzB,QAAA;MACA;IACA;IAEA0B,eAAAC,YAAA;MACAC,OAAA,CAAAC,GAAA,CAAAF,YAAA;IACA;IACAJ,gBAAAF,KAAA;MACA,2BAAAA,KAAA;IACA;IAEAS,cAAAC,UAAA,EAAAC,WAAA;MACA,KAAAC,MAAA,CAAAC,MAAA;QACAC,UAAA,EAAAJ,UAAA;QACAC;MACA;IACA;IAEAI,iBAAAL,UAAA;MACA,KAAAE,MAAA,CAAAC,MAAA,iCAAAH,UAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}