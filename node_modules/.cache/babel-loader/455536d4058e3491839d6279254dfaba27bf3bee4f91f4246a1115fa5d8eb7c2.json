{"ast":null,"code":"import Vuex from \"vuex\";\nimport Vue from \"vue\";\nimport Axios from \"axios\";\nVue.use(Vuex);\nconst userState = {\n  state: {\n    isUserLogged: true,\n    userRights: []\n  },\n  mutations: {\n    setLoginState(state, loginStatus) {\n      state.isUserLogged = loginStatus;\n    },\n    setUserRights(state, userRights) {\n      state.userRights = userRights;\n    }\n  },\n  actions: {\n    checkUserLogin({\n      commit\n    }) {\n      Axios.get(\"http://localhost:5000/check-token-from-login\", {\n        withCredentials: true\n      }).then(response => {\n        console.log(response.data.rights);\n        const userRights = response.data.rights.map(roleRight => {\n          return roleRight.rights.map(right => {\n            return right.name;\n          });\n        });\n\n        // Flatten the array and remove duplicates using a Set\n        const uniqueUserRighs = [...new Set(userRights.flat())];\n        console.log(uniqueUserRighs);\n        if (response.data.isLogged === true) {\n          commit(\"setLoginState\", true);\n        } else {\n          commit(\"setLoginState\", false);\n        }\n      }).catch(error => {\n        // add error handling\n        console.log(error);\n      });\n    },\n    setIsUserLogged({\n      commit\n    }, isLogged) {\n      commit(\"setLoginState\", isLogged);\n    }\n  },\n  getters: {\n    isUserLogged: state => state.isUserLogged\n  }\n};\nexport default userState;","map":{"version":3,"names":["Vuex","Vue","Axios","use","userState","state","isUserLogged","userRights","mutations","setLoginState","loginStatus","setUserRights","actions","checkUserLogin","commit","get","withCredentials","then","response","console","log","data","rights","map","roleRight","right","name","uniqueUserRighs","Set","flat","isLogged","catch","error","setIsUserLogged","getters"],"sources":["C:/Users/jdlou/OneDrive/Plocha/crmproject/crm-frontend/src/State/userState.js"],"sourcesContent":["import Vuex from \"vuex\";\r\nimport Vue from \"vue\";\r\nimport Axios from \"axios\";\r\n\r\nVue.use(Vuex);\r\n\r\nconst userState = {\r\n  state: {\r\n    isUserLogged: true,\r\n    userRights: [],\r\n  },\r\n\r\n  mutations: {\r\n    setLoginState(state, loginStatus) {\r\n      state.isUserLogged = loginStatus;\r\n    },\r\n\r\n    setUserRights(state, userRights) {\r\n      state.userRights = userRights;\r\n    },\r\n  },\r\n\r\n  actions: {\r\n    checkUserLogin({ commit }) {\r\n      Axios.get(\"http://localhost:5000/check-token-from-login\", {\r\n        withCredentials: true,\r\n      })\r\n        .then((response) => {\r\n          console.log(response.data.rights);\r\n\r\n          const userRights = response.data.rights.map((roleRight) => {\r\n            return roleRight.rights.map((right) => {\r\n              return right.name;\r\n            });\r\n          });\r\n\r\n          // Flatten the array and remove duplicates using a Set\r\n          const uniqueUserRighs = [...new Set(userRights.flat())];\r\n\r\n          console.log(uniqueUserRighs);\r\n\r\n          if (response.data.isLogged === true) {\r\n            commit(\"setLoginState\", true);\r\n          } else {\r\n            commit(\"setLoginState\", false);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          // add error handling\r\n          console.log(error);\r\n        });\r\n    },\r\n\r\n    setIsUserLogged({ commit }, isLogged) {\r\n      commit(\"setLoginState\", isLogged);\r\n    },\r\n  },\r\n\r\n  getters: {\r\n    isUserLogged: (state) => state.isUserLogged,\r\n  },\r\n};\r\n\r\nexport default userState;\r\n"],"mappings":"AAAA,OAAOA,IAAI,MAAM,MAAM;AACvB,OAAOC,GAAG,MAAM,KAAK;AACrB,OAAOC,KAAK,MAAM,OAAO;AAEzBD,GAAG,CAACE,GAAG,CAACH,IAAI,CAAC;AAEb,MAAMI,SAAS,GAAG;EAChBC,KAAK,EAAE;IACLC,YAAY,EAAE,IAAI;IAClBC,UAAU,EAAE;EACd,CAAC;EAEDC,SAAS,EAAE;IACTC,aAAaA,CAACJ,KAAK,EAAEK,WAAW,EAAE;MAChCL,KAAK,CAACC,YAAY,GAAGI,WAAW;IAClC,CAAC;IAEDC,aAAaA,CAACN,KAAK,EAAEE,UAAU,EAAE;MAC/BF,KAAK,CAACE,UAAU,GAAGA,UAAU;IAC/B;EACF,CAAC;EAEDK,OAAO,EAAE;IACPC,cAAcA,CAAC;MAAEC;IAAO,CAAC,EAAE;MACzBZ,KAAK,CAACa,GAAG,CAAC,8CAA8C,EAAE;QACxDC,eAAe,EAAE;MACnB,CAAC,CAAC,CACCC,IAAI,CAAEC,QAAQ,IAAK;QAClBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACG,IAAI,CAACC,MAAM,CAAC;QAEjC,MAAMf,UAAU,GAAGW,QAAQ,CAACG,IAAI,CAACC,MAAM,CAACC,GAAG,CAAEC,SAAS,IAAK;UACzD,OAAOA,SAAS,CAACF,MAAM,CAACC,GAAG,CAAEE,KAAK,IAAK;YACrC,OAAOA,KAAK,CAACC,IAAI;UACnB,CAAC,CAAC;QACJ,CAAC,CAAC;;QAEF;QACA,MAAMC,eAAe,GAAG,CAAC,GAAG,IAAIC,GAAG,CAACrB,UAAU,CAACsB,IAAI,CAAC,CAAC,CAAC,CAAC;QAEvDV,OAAO,CAACC,GAAG,CAACO,eAAe,CAAC;QAE5B,IAAIT,QAAQ,CAACG,IAAI,CAACS,QAAQ,KAAK,IAAI,EAAE;UACnChB,MAAM,CAAC,eAAe,EAAE,IAAI,CAAC;QAC/B,CAAC,MAAM;UACLA,MAAM,CAAC,eAAe,EAAE,KAAK,CAAC;QAChC;MACF,CAAC,CAAC,CACDiB,KAAK,CAAEC,KAAK,IAAK;QAChB;QACAb,OAAO,CAACC,GAAG,CAACY,KAAK,CAAC;MACpB,CAAC,CAAC;IACN,CAAC;IAEDC,eAAeA,CAAC;MAAEnB;IAAO,CAAC,EAAEgB,QAAQ,EAAE;MACpChB,MAAM,CAAC,eAAe,EAAEgB,QAAQ,CAAC;IACnC;EACF,CAAC;EAEDI,OAAO,EAAE;IACP5B,YAAY,EAAGD,KAAK,IAAKA,KAAK,CAACC;EACjC;AACF,CAAC;AAED,eAAeF,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}