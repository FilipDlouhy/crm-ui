{"ast":null,"code":"export default {\n  data() {\n    return {\n      firstName: \"\",\n      lastName: \"\",\n      telNumber: \"\",\n      password: \"\"\n    };\n  },\n  methods: {\n    async register() {\n      const userData = {\n        username: this.username,\n        email: this.email\n        // Other data properties\n      };\n\n      try {\n        const response = await fetch(\"/api/register\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(userData)\n        });\n\n        // Handle response from server\n      } catch (error) {\n        console.error(\"Error:\", error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["data","firstName","lastName","telNumber","password","methods","register","userData","username","email","response","fetch","method","headers","body","JSON","stringify","error","console"],"sources":["src/Dashboard/Components/LoginForm/LoginForm.vue"],"sourcesContent":["<template>\r\n  <div class=\"dashboard-form\">\r\n    <div class=\"dashboard-form-header\">\r\n      <h1>Sing up into TechTrack CRM</h1>\r\n      <h2>Or are you already registered</h2>\r\n    </div>\r\n    <div class=\"dashboard-form-login-data\">\r\n      <input v-model=\"firstName\" type=\"text\" placeholder=\"First name\" />\r\n      <input v-model=\"lastName\" type=\"text\" placeholder=\"Last name\" />\r\n      <input v-model=\"telNumber\" type=\"tel\" placeholder=\"Telephone\" />\r\n      <input v-model=\"password\" type=\"password\" placeholder=\"Password\" />\r\n      <button @click=\"\">Sign up</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      telNumber: \"\",\r\n      password: \"\",\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    async register() {\r\n      const userData = {\r\n        username: this.username,\r\n        email: this.email,\r\n        // Other data properties\r\n      };\r\n\r\n      try {\r\n        const response = await fetch(\"/api/register\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify(userData),\r\n        });\r\n\r\n        // Handle response from server\r\n      } catch (error) {\r\n        console.error(\"Error:\", error);\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.dashboard-form {\r\n  width: 40%;\r\n  height: 60%;\r\n  background: white;\r\n  box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\r\n  border-radius: 5px;\r\n}\r\n\r\n.dashboard-form-header {\r\n  width: 100%;\r\n  height: 20%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-around;\r\n  flex-direction: column;\r\n  color: rgb(10, 174, 227);\r\n\r\n  h2 {\r\n    font-size: 1.2rem;\r\n    color: rgba(128, 128, 128, 0.61);\r\n    cursor: pointer;\r\n    transition: 0.3s;\r\n    &:hover {\r\n      color: rgb(10, 176, 227);\r\n    }\r\n  }\r\n}\r\n\r\n.dashboard-form-login-data {\r\n  width: 100%;\r\n  height: 80%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-around;\r\n  flex-direction: column;\r\n  button {\r\n    width: 250px;\r\n    height: 40px;\r\n    background-color: rgb(10, 176, 227);\r\n    outline: none;\r\n    border: none;\r\n    color: white;\r\n    box-shadow: rgba(0, 0, 0, 0.15) 1.95px 1.95px 2.6px;\r\n    font-size: 1.25rem;\r\n    font-weight: 500;\r\n    letter-spacing: 1px;\r\n    cursor: pointer;\r\n  }\r\n  input {\r\n    width: 300px;\r\n    height: 30px;\r\n    text-align: center;\r\n    border-right: none;\r\n    border-left: none;\r\n    border-top: none;\r\n    border-bottom-color: rgb(199, 199, 199);\r\n  }\r\n  input:focus {\r\n    border-right: none;\r\n    border-left: none;\r\n    border-top: none;\r\n    outline: none;\r\n    border-bottom-color: rgb(10, 176, 227);\r\n  }\r\n  input:focus::placeholder {\r\n    transform: translateY(-120%); /* Move the placeholder text up */\r\n    color: rgb(10, 176, 227); /* Change placeholder color when focused */\r\n  }\r\n}\r\n</style>\r\n"],"mappings":"AAiBA;EACAA,KAAA;IACA;MACAC,SAAA;MACAC,QAAA;MACAC,SAAA;MACAC,QAAA;IACA;EACA;EAEAC,OAAA;IACA,MAAAC,SAAA;MACA,MAAAC,QAAA;QACAC,QAAA,OAAAA,QAAA;QACAC,KAAA,OAAAA;QACA;MACA;;MAEA;QACA,MAAAC,QAAA,SAAAC,KAAA;UACAC,MAAA;UACAC,OAAA;YACA;UACA;UACAC,IAAA,EAAAC,IAAA,CAAAC,SAAA,CAAAT,QAAA;QACA;;QAEA;MACA,SAAAU,KAAA;QACAC,OAAA,CAAAD,KAAA,WAAAA,KAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}